openapi: 3.0.1
info:
  title: Credit Mutuel Mobile APIs
  description: |
    Credit Mutuel API collections. I hope you're ready for madness, because I
    sure as heck wasn't when I started...

    Credit Mutuel is a french bank. I had previously written a script to show my
    bank balance on my desktop. Unfortunately, forced by a recent european
    directive, Credit Mutuel implemented a 2FA mechanism to their website,
    breaking my script. Their authentication system has stingent limits, logging
    users after a couple minutes of inactivity. Furthermore, the cookies were
    cycled too fast.

    Because of all those restrictions, I decided to look into their
    application's API. I figured it should be able to do everything I want and
    more, and should be easier to work with than parsing HTML.

    # The Setup

    We'll be working on the "new" credit mutuel application, whose packageid is
    com.cm_prod.bad. Furthermore, we'll look at the android app.

    The application has two main annoying feature we'll need to disable before
    we can make any progress:

    1. Root detection. If the user is root, the application will show an error
       and prevent the user from logging in. The root detection is defeated by
       Magisk Hide, but this will break frida, which we plan on using.
    2. Certificate Pinning. This will prevent us from MITM-ing the connection.
       We want to be able to see all the requests sent and received by the app,
       so we'll need to kill this.

    The first step to both was to download the APK and extract it with both
    apktool and jadx. The apktool dump will be used to patch the smali code in
    order to remove the two annoying features, while the jadx output will be
    as the basis to reverse engineer (because reverse engineering from smali
    code is not fun...). The app is heavily obfuscated, so we'll be using
    `jadx`' deobfuscation mode to create a deobf mapping.

    ```
    apktool d --no-res -o smali com.cm_prod.bad.apk
    jadx --deobf -d jadx com.cm_prod.bad.apk
    ```

    A quick look at the jadx will reveal two things:
    1. A lot of the obfuscation can be defeated through looking at the asserts.
    2. There's a lot of strings in there that will help our process.

    Finding the key pinning code was a simple matter of grepping through the
    code for "pinning" references. Quickly enough, it becomes apparent that the
    o.UO class is responsible for it. In particular, it appears that simply
    stubbing the `ॱ` function is enough to kill it. Replacing everything after
    `.line 1218` with `return-void` does the trick!

    Removing the root detection code is similarly simple. In the `o.HL` class,
    replace the `ˎ` function with a stubbed implementation, removing everything
    after the initialization of the v4 variable.

    We can rebuild the application with

    ```
    apktool b -o com.cm_prod.bad.tmp.apk smali/
    jarsigner -sigalg SHA1withRSA -digestalg SHA1 -tsa \
    http://timestamp.digicert.com -storepass basil-joule-bug -keystore \
    ~/.local/lib/python3.8/site-packages/objection/utils/assets/objection.jks \
    com.cm_prod.bad.tmp.apk objection
    zipalign -p 4 com.cm_prod.bad.tmp.apk com.cm_prod.bad.patched.apk
    rm com.cm_prod.bad.tmp.apk
    ```

    # MITM

    For the MITM, I used [mitmproxy](mitmproxy.org). [ProxyDroid](https://play.google.com/store/apps/details?id=org.proxydroid&hl=en) was used to
    proxify only the Credit Mutuel app, making the mitmproxy logs much cleaner.

    # General notes

    Many (all?) requests need to have a User-Agent header set, otherwise a 403
    Forbidden response will be given. The contents of the User-Agent doesn't
    matter, so long as it is set.

  license:
    name: You Probably Shouldn't Be Touching This License
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://mobile.creditmutuel.fr/

tags:
- name: Authentication
  description: APIs related to enrolling new devices to the account.
- name: Enroll APIs
  description: |
    APIs related to enrolling new devices to the account.
    When a new device (as identified by the deviceId field) attempts to login,
    it must first be "enrolled" into the account. This usually means it needs to
    be allowed by a pre-existing, allowed device. This is usually done by
    sending a code to this other device that must then be sent in the enrollment
    request. "Devices" here is extremely general: The code may be sent to
    another app, an SMS, an email or even a snail mail.
- name: TouchID
  description: TouchID enrollment related APIs.
- name: 2FA
- name: PFM
  description: APIs related to Personal Finance Management.

paths:
  /wsmb/fr/sosd/ToolServicePinCertificate.html:
    post:
      summary: Retrieve the pinned certificates
      description: Retrieves the certificates that should be pinned.
      operationId: ToolServicePinCertificate
      requestBody:
        description: Certificate Pinning Parameters
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                alea:
                  type: string
                  description: First 12 characters of a random UUID
                  example: 12345678-abc
                numcle:
                  type: integer
                  description: Key ID. Seems to have a valid range of 0-5
                  format: int32
                targetbank:
                  type: string
                  example: CM
                withapic:
                  type: integer
                  format: int32
      responses:
        200:
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  __type:
                    type: string
                    example: DefaultPinCertificateResponse:http://webs.e-i.com/webs/tool/
                  additional_pins:
                    type: array
                    items:
                      type: object
                      properties:
                        clear_pin:
                          type: string
                        hostname:
                          type: string
                  clear_apic_pin:
                    type: string
                  clear_pfm_pin:
                    type: string
                  clear_pin:
                    type: string
                  code_retour:
                    type: integer
                  detail_msg_retour:
                    type: string
                  msg_retour:
                    type: string
                  pin:
                    type: string

  # Too lazy to document this. It's pretty useless.
  /wsmb/fr/RECHFD.html:
    post:
      summary: Checks if the provided zipcode is valid
      responses:
        200:
          description: Yay
          content: {}

  /wsmb/fr/IDE2.html:
    post:
      summary: Login
      tags:
      - Authentication
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                _cm_user:
                  type: string
                  description: Account username.
                applicationCode:
                  type: string
                  example: CM
                  description: Should always be "CM"
                platform:
                  type: string
                  example: ANDROID
                deviceId:
                  type: string
                  example: 123456789abcde00null
                _appversion:
                  type: string
                  example: 7.19.1
                _wsversion:
                  type: number
                  example: 2
                userId:
                  type: string
                  example: ""
                _cm_pwd:
                  type: string
                  description: Account password.
                cv:
                  type: string
                  example: AN1
                  description: >
                    Also called identificationCodeAlgoVersion. Either
                    AN1 or AN2
                  enum: [AN1, AN2]
                code:
                  type: string
                  description: >
                    `Hex(Hmac256("1da5d62a7ddd29f1ad97b61a0a9a872308f46f6297f71ead6a638d0953e606bc",
                    _cm_user + _cm_pwd + _media + timestamp + cv))`
                timestamp:
                  type: number
                  description: Timestamp in milliseconds of the login attempt.
                _cible:
                  type: string
                  example: CM
                _media:
                  type: string
                  example: AN
      responses:
        200:
          description: Yay this is cool just how live is this
          headers:
            Set-Cookie:
              schema:
                type: string
                example: IdSes=abcde12345; Path=/; Secure
          content:
            application/xml:
              schema:
                  type: object
                  xml:
                    name: root
                  properties:
                    code_retour:
                      type: number
                    sca:
                      type: boolean
                    liste_fonction:
                      type: array
                      xml:
                        wrapped: true
                      items:
                        type: object
                        xml:
                          name: fct
                        properties:
                          code:
                            type: string
                    userid:
                      type: string
                    libelle_client:
                      type: string
                    dtcnx:
                      type: number
                      description: Date of last connection.
                    fede:
                      type: number
                    is_bad_contract_signed:
                      type: object
                    cdc:
                      type: object
                      properties:
                        civ:
                          type: string
                        prenom:
                          type: string
                        nom:
                          type: string
                        tel:
                          type: string
                        mel:
                          type: string
                    root_url:
                      type: string
                    password_change_date:
                      type: string
        403:
          description: Authentication failed

  /cmmabn/fr/SOSD_PUSH_ExistsEnrolment.html:
    post:
      summary: Checks if device is already enrolled
      description: Checks if device is already enrolled
      tags:
      - Enroll APIs
      security:
      - cookieAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                _wsversion:
                  type: number
                  example: 5
                applicationCode:
                  type: string
                  example: CM
                deviceId:
                  type: string
                platform:
                  type: string
                  example: ANDROID
                alea:
                  type: number
                  example: -1
                  description: |
                    Authentication unique id. Should be 40 digits in length. Can
                    be set to -1 on first authentication. Subsequent auths must
                    use a consistent alea.
                _media:
                  type: string
                  example: AN
      responses:
        200:
          description: yay
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: root
                properties:
                  code_retour:
                    type: number
                  msg_retour:
                    type: string
                  detail_msg_retour:
                    type: string
                  date_msg:
                    type: string
                    description: YYYYmmdd
                  existsEnrolmentResult:
                    type: object
                    properties:
                      isEnrolled:
                        type: boolean
                      isActive:
                        type: boolean
                      pushToken:
                        type: string
                      isIncompleteEnrolment:
                        type: boolean
                      validationTransactionId:
                        type: string
                        description: |
                          Transaction ID used for the next 2FA attempt, either
                          via SCAAuthenticationProcess or via VerifyEnrolment.
                      otherEnrolmentsForUser:
                        type: object
                        properties:
                          enrolmentForUser:
                            type: object
                            properties:
                              deviceName:
                                type: string
                                example: PHONE MODEL
                              enrolmentDate:
                                type: string
                                example: 20200115030434
                                description: Date, in the YYmmddHHMMSS format.
                              userEnrolmentId:
                                type: string
                                description: Enrolment GUID
                              isDefault:
                                type: boolean
                              platform:
                                type: string
                                example: ANDROID
                              applicationCode:
                                type: string
                                example: CM
                              isIncomplete:
                                type: boolean
                      otpAvailabilityResult:
                        type: object
                        properties:
                          availability:
                            type: string
                          unavailabilityDescription:
                            type: string
                          delivery:
                            type: object
                            properties:
                              method:
                                $ref: '#/components/schemas/EnrollMethod'
                              desc:
                                type: string

  /cmmabn/fr/SOSD_PUSH_DeliverEnrolmentCode.html:
    post:
      summary: Request SMS 2FA code to enroll this device
      tags:
      - Enroll APIs
      security:
      - cookieAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                _wsversion:
                  type: number
                  example: 5
                applicationCode:
                  type: string
                  example: CM
                deviceId:
                  type: string
                platform:
                  type: string
                  example: ANDROID
                method:
                  $ref: '#/components/schemas/EnrollMethod'
                action:
                  type: string
                  description: Should always be empty, no clue what CANCEL does.
                  enum:
                  - ""
                  - CANCEL
                deviceName:
                  type: string
                  example: "PHONE MODEL"
                _media:
                  type: string
                  example: AN
      responses:
        200:
          description: Success
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: root
                properties:
                  code_retour:
                    type: number
                  msg_retour:
                    type: string
                  detail_msg_retour:
                    type: string
                  date_msg:
                    type: string
                  otpDeliveringResult:
                    type: object
                    properties:
                      delivering:
                        type: object
                        properties:
                          method:
                            type: string
                          status:
                            type: string
                          desc:
                            type: string
                          deliveryDate:
                            type: string
                            description: dd/mm/YY hh:mm:ss
                          inputPassword:
                            type: object
                            properties:
                              key:
                                type: string
                                example: otp_password
                              format:
                                type: string
                                example: NUMERIC
                              label:
                                type: string
                                example: Pour confirmer votre opération, indiquez votre code de confirmation
                              maxLength:
                                type: number
                                example: 6
                          inputHidden:
                            type: object
                            properties:
                              key:
                                type: string
                                example: otp_hidden
                              value:
                                type: string
                      backupDeliveryMethods:
                        type: object
                        properties:
                          backupDeliveryTitle:
                            type: string
                            example: Vous n'avez pas reçu notre SMS ?
                          inTransactionMethods:
                            type: object
                            properties:
                              inTransactionMethodsTitle:
                                type: string
                                example: Vous pouvez aussi recevoir à nouveau le code de confirmation
                              backupInputHiddenKey:
                                type: string
                                example: global_backup_hidden_key
                              backupDeliveryMethodsTab:
                                type: object
                                properties:
                                  backupDeliveryMethod:
                                    type: object
                                    properties:
                                      method:
                                        $ref: '#/components/schemas/EnrollMethod'
                                      desc:
                                        type: string
                                        example: "au 06 XX XX X1 23 : par SMS"
                                      obfuscatedCoordinate:
                                        type: string
                                        example: 06 XX XX X1 23
                                      backupInputHiddenValue:
                                        type: string
                          outTransactionMethods:
                            type: object
                            properties:
                              backupDeliveryMethod:
                                type: object
                                properties:
                                  desc:
                                    type: string
                      serverPublicKey:
                        type: string
                        format: byte
                        description: |
                          RSA Public Key used to encrypt the pin during the
                          next enrollment request. The key is base64, and ASN.1
                          X509-encoded.
                      serverPublicKeyHash:
                        type: string
                        description: |
                          Hash

  /cmmabn/fr/SOSD_PUSH_EnrollApplication.html:
    post:
      summary: ""
      tags:
      - Enroll APIs
      security:
      - cookieAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                _wsversion:
                  type: number
                  example: 5
                applicationCode:
                  type: string
                  example: CM
                deviceId:
                  type: string
                platform:
                  type: string
                  example: ANDROID
                method:
                  $ref: '#/components/schemas/EnrollMethod'
                applicationVersion:
                  type: string
                  example: 7.19.1
                deviceName:
                  type: string
                  example: NEXUS 5X
                isDeviceByDefault:
                  type: boolean
                pin:
                  type: string
                  format: byte
                  description: |
                    Salted pin, encrypted with RSA serverPublicKey from previous
                    request, in `RSA/ECB/OAEPWithSHA-1AndMGF1Padding` mode.

                    `base64(RSAEncrypt(key, actualPinCode + "::" + alea))`

                    The actual pin code should usually be 6 digits.
                pushId:
                  type: string
                  description: |
                    Appears to be an FCM token. Optional.
                alea:
                  type: string
                  description: 40 digit random number.
                enrolmentsToDelete:
                  type: string
                clientPublicKey:
                  type: string
                  format: byte
                  description: |
                    Base64 RSA2048 public key used by the server to encrypt the
                    secret key returned to the user. Each request should
                    generate its own key.
                clientPublicKeyHash:
                  type: string
                  format: byte
                  description: Hash of the clientPublicKey.
                otp_hidden:
                  type: string
                otp_password:
                  type: string
                _media:
                  type: string
                  example: AN
      responses:
        200:
          description: Success
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: root
                properties:
                  code_retour:
                    type: number
                  msg_retour:
                    type: string
                  detail_msg_retour:
                    type: string
                  date_msg:
                    type: string
                  enrolmentResult:
                    type: object
                    properties:
                      otpCheckResult:
                        type: object
                        properties:
                          status:
                            type: string
                            example: CHECKSUCCESS
                          errorMessage:
                            type: string
                      secretKey:
                        type: string
                        format: byte
                        description: |
                          2FA key encrypted with the key provided in the request
                          body, in RSA/ECB/OAEPWithSHA-1AndMGF1Padding mode. The
                          exact operation is `base64(RSA(base64(secret_key)))`
                      secretKeyHash:
                        type: string
                        format: byte
                        description: |
                          A (totally useless) SHA256 of the secretKey *after*
                          being encrypted with the RSA clientKey. In other
                          words: `base64(sha256(RSA(base64(secretKey))))`

  /cmmabn/fr/SOSD_PUSH_VerifyEnrolment.html:
    post:
      summary: ""
      tags:
      - Enroll APIs
      security:
      - cookieAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                _wsversion:
                  type: number
                  example: 5
                applicationCode:
                  type: string
                  example: CM
                deviceId:
                  type: string
                platform:
                  type: string
                  example: ANDROID
                transactionValidationId:
                  type: string
                  description: |
                    The validation transaction ID as found in the
                    existsEnrolment response.
                random:
                  type: integer
                  format: int32
                  description: |
                    A 32-bit random number, used to salt the validationToken.
                randomPush:
                  type: string
                  description: |
                    Only necessary when the enrolment has an FCM pushToken
                    associated with it.
                validationToken:
                  type: string
                  description: |
                    A hexadecimal validation token that can be built by applying
                    the following algorithm:

                    ```
                    salt = sha1("EVF" + random_u32() + "Client/Serv")
                    intermediate_key = HmacSha256(secret_key, "\x01\x00\x00\x00ConfMobWithPin" + salt + "\x00ConfMobMKv1\x00\x01\x00\x00")
                    derived_key = HmacSha256(intermediate_key + pin, salt + "\x01\x00\x00\x00")
                    HmacSha256(derived_key, "IDNU={userId}$$PLATEFORME={platforme}$$TRANSACTIONVALIDATIONID={transactionValidationId}")
                    ```
                _media:
                  type: string
                  example: AN
      responses:
        200:
          description: Success
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: root
                properties:
                  code_retour:
                    type: number
                  msg_retour:
                    type: string
                  detail_msg_retour:
                    type: string
                  date_msg:
                    type: string

  /cmmabn/fr/watdow.aspx:
    post:
      summary: Unknown
      responses:
        200:
          description: Unknown
          content:
            application/json:
              schema:
                type: object

  /cmmabn/fr/DCNX.html:
    post:
      summary: Disconnect
      description: Disconnect the user.
      tags:
      - Authentication
      security:
      - cookieAuth: []
      responses:
        200:
          description: Successfully disconnected
          headers:
            Set-Cookie:
              schema:
                type: string
                example: IdSes=DISCONNECTED; Path=/

  /cmmabn/fr/SOSD_PUSH_SCAAuthenticationProcess.html:
    post:
      summary: "Finalizes authentication through pincode or biometric auth."
      description: ""
      tags:
      - Authentication
      security:
      - cookieAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                _wsversion:
                  type: number
                  example: 5
                transactionToken:
                  type: string
                  description: |
                    Hexadecimal transaction token
                transactionData:
                  type: string
                random:
                  type: string
                validationCounter:
                  type: string
                authMode:
                  type: string
                _media:
                  type: string
                  example: AN

      responses:
        200:
          description: Success

  /cmmabn/fr/refonte/appmenu.html?_media=AN:
    get:
      summary: "Get tabbar and menu items."
      responses:
        200:
          description: Success

  /cmmabn/fr/PFMINIT.html:
    post:
      summary: Initialize the PFM.
      responses:
        200:
          description: Success

  /cmmabn/fr/paci/engine.aspx?_media=AN:
    get:
      summary: Unknown
      responses:
        200:
          description: Success

  /cmmabn/fr/touchid/enroll.aspx:
    post:
      summary: Start enrollment of TouchID
      tags:
      - TouchID
      security:
      - cookieAuth: []
      responses:
        200:
          description: Success

  /cmmabn/fr/touchid/requestinapp.aspx:
    post:
      summary: Enroll TouchID
      tags:
      - TouchID
      security:
      - cookieAuth: []
      responses:
        200:
          description: Success

  /cmmabn/fr/touchid/verifyinapp.aspx?bio_method=Empreinte+digitale:
    post:
      summary: Verify enroll of TouchID succeeded
      tags:
      - TouchID
      security:
      - cookieAuth: []
      responses:
        200:
          description: Success

  /wsmb/fr/LOGCRASH.html:
    post:
      summary: Submit a crash or error report.
      responses:
        200:
          description: Success

  /cmmabn/fr/services/messagerie_securisee.html:
    post:
      summary: Interact with the "secure" messenger.
      security:
      - cookieAuth: []
      responses:
        200:
          description: Success

  /cmmabn/fr/CONS.html:
    post:
      summary: Get information about this account's representant.
      security:
      - cookieAuth: []
      responses:
        200:
          description: Success

  /cmmabn/fr/banque/PRC2.html:
    post:
      summary: Get user information.
      security:
      - cookieAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                _wsversion:
                  type: number
                  example: 5
                categorize:
                  type: number
                  example: 1
                _media:
                  type: string
                  example: AN
      responses:
        200:
          description: Success
          content:
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/Result'
                - type: object
                  properties:
                    code_retour_cpl:
                      type: number
                      example: 0
                    category_list:
                      type: array
                      xml:
                        wrapped: true
                      items:
                        type: object
                        xml:
                          name: category
                        properties:
                          name:
                            type: string
                          code:
                            type: string # Probably an enum
                    liste_compte:
                      type: array
                      xml:
                        wrapped: true
                      items:
                        type: object
                        xml:
                          name: compte
                        properties:
                          account_type:
                            type: number
                          iban:
                            type: string
                          devise:
                            type: string
                          account_number:
                            type: string
                          intc:
                            type: string
                          int:
                            type: string
                          tit:
                            type: string
                          refprd:
                            type: string
                          codprd:
                            type: string
                          refctr_exi_val:
                            type: string
                          refctr_inn_val:
                            type: string
                          has_announced_transactions:
                            type: number
                          category_code:
                            type: string
                          category_name:
                            type: string
                          solde:
                            type: string
                          agreed_overdraft:
                            type: string
                          appcpt:
                            type: number
                          isholder:
                            type: number
                          webid:
                            type: string
                          checkingaccount:
                            type: number
                          characteristics:
                            type: number
                          simulation:
                            type: number
                          contract:
                            type: string
                          isFavorite:
                            type: number


  /cmmabn/fr/LSTMVT2.html:
    post:
      summary: Get information about a specific account.
      security:
      - cookieAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                webid:
                  type: string
                _wsversion:
                  type: number
                  example: 1
                _media:
                  type: string
                  example: AN
      responses:
        200:
          description: Success
          content:
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/Result'
                - type: object
                  properties:
                    tabmvt:
                      type: array
                      xml:
                        wrapped: true
                      items:
                        type: object
                        xml:
                          name: ligmvt
                        properties:
                          dat:
                            type: string
                            description: |
                              Date of transaction, in the format
                              YYYYMMDD
                            example: 20200703
                          lib:
                            type: string
                          lib2:
                            type: string
                          lib3:
                            type: string
                          lib4:
                            type: string
                          lib5:
                            type: string
                          lib6:
                            type: string
                          mnt:
                            type: string
                            example: -47.99EUR
                          type:
                            type: string
                            example: AVI


  /wsmb/fr/SOSD_PUSH_FindTransactionsUnauth.html:
    post:
      summary: Unknown
      tags:
      - 2FA
      responses:
        200:
          description: Success
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/FindTransactionsResult'

  /cmmabn/fr/SOSD_PUSH_FindTransactionsAuth.html:
    post:
      summary: Unknown
      tags:
      - 2FA
      security:
      - cookieAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                _wsversion:
                  type: number
                  example: 5
                  description: Should always be 5.
                applicationCode:
                  type: string
                  example: "CM"
                  description: Should always be `CM`.
                deviceId:
                  type: string
                platform:
                  type: string
                  example: ANDROID
                  enum:
                  - ANDROID
                worldId:
                  type: string
                  example: "CM"
                userId:
                  type: string
                random:
                  type: number
                  format: int32
                  description: 32-bit random number used to salt the token's key.
                token:
                  type: string
                  description: |
                    HMAC256 over the string
                    `ALEA=${transactionRandom}$$IDNDEVICE=${deviceId}$$IDNU=${userId}$$PLATFORME=${platform}`.

                    Key is `HmacSHA256(secretKey, sha1("RCH" + random + "Client/Serv"))`
                transactionRandom:
                  type: string
                  description: More salting of the token.
                _media:
                  type: string
                  example: AN
      responses:
        200:
          description: Success
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/FindTransactionsResult'

  /wsmb/fr/SOSD_PUSH_FindTransactionsPush.html:
    post:
      summary: Get 2FA requests. Unauthenticated.
      tags:
      - 2FA
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                _wsversion:
                  type: number
                  example: 5
                  description: Should always be 5.
                applicationCode:
                  type: string
                  example: "CM"
                  description: Should always be `CM`.
                deviceId:
                  type: string
                platform:
                  type: string
                  example: ANDROID
                  enum:
                  - ANDROID
                worldId:
                  type: string
                  example: "CM"
                userId:
                  type: string
                random:
                  type: number
                  format: int32
                  description: 32-bit random number used to salt the token's key.
                token:
                  type: string
                  description: |
                    HMAC256 over the string
                    `ALEA=${transactionPushId}$$IDNDEVICE=${deviceId}$$IDNU=${userId}$$PLATFORME=${platform}`.

                    Key is `HmacSHA256(secretKey, sha1("RCH" + random + "Client/Serv"))`
                transactionPushId:
                  type: string
                _media:
                  type: string
                  example: AN
      responses:
        200:
          description: Success
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/FindTransactionsResult'

  /wsmb/fr/SOSD_PUSH_TransactionValidation.html:
    post:
      summary: Validate/allow a 2FA request
      description: |
        Allow or disallow a 2FA request.

        Note that failure to send the proper information here can lead to a ban
        on the "mobile app 2FA" feature for at least 15 minutes, likely to
        prevent bruteforcing.
      tags:
      - 2FA
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                _wsversion:
                  type: number
                  example: 5
                applicationCode:
                  type: string
                  example: CM
                platform:
                  type: string
                  example: ANDROID
                deviceId:
                  type: string
                userId:
                  type: string
                worldId:
                  type: string
                  example: CM
                transactionToken:
                  type: string
                validationTransactionId:
                  type: string
                safetynet:
                  type: string
                  description: May be empty. Probably linked to Google SafetyNet.
                transactionData:
                  type: string
                  example: ALEA=<transactionId>$$ALEASHORT=<validationTransactionId>$$CDFNX=<transactionType>$$DATE=dd/mm/YYYY HH:MM:SS$$USER=XXXXXXXX1234
                  description: |
                    The data is built up from a dictionary with two sources: the
                    `data` field of the transaction we're validating, and the
                    following:

                    ```json5
                    {
                      "ALEA": transactionId,
                      "ALEASHORT": validationTransactionId,
                      "CDFNX": transaction_type
                    }
                    ```

                    This dictionary is then encoded by sorting it by key name,
                    joining the keys and values with an `=`, and joining all the
                    resulting values with `$$`.

                    Example: `ALEA=<transactionId>$$ALEASHORT=<validationTransactionId>$$CDFNX=AUT$$DATE=dd/mm/YYYY HH:MM:SS$$USER=XXXXXXXX1234`
                action:
                  type: string
                  example: VALIDATE
                  enum:
                  - VALIDATE
                random:
                  type: string
                validationCounter:
                  type: number
                  description: |
                    Counter that increases each time this specific enrolled
                    device validates a transaction. Make sure you increment it
                    after each operation, or you might fail validation and lock
                    your account for 15 minutes! It's allowed to increment the
                    counter by more than one.
                authMode:
                  type: string
                  description: The kind of authentication to use to validate 2FA.
                  enum:
                  - PASSWORD
                  - PINCODE
                  - BIOMETRICS
                  example: PINCODE
                _media:
                  type: string
                  example: AN
      responses:
        200:
          description: Success
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: root
                properties:
                  code_retour:
                    type: number
                  msg_retour:
                    type: string
                  detail_msg_retour:
                    type: string
                  date_msg:
                    type: string
                  transactionValidationResult:
                    type: object
                    properties: {}

  /cmmabn/fr/CAREP.html:
    post:
      summary: Get account characteristics.
      responses:
        200:
          description: Success

  /cmmabn/fr/GSD1.html:
    post:
      responses:
        200:
          description: Success

  /cmmabn/fr/SCIM_default.aspx:
    post:
      responses:
        200:
          description: Success

  /cmmabn/fr/PING.html:
    post:
      responses:
        200:
          description: Success



components:
  schemas:
    Result:
      type: object
      xml:
        name: root
      properties:
        code_retour:
          type: number
        msg_retour:
          type: string
        detail_msg_retour:
          type: string
        date_msg:
          type: string

    FindTransactionsResult:
      allOf:
      - $ref: '#/components/schemas/Result'
      - type: object
        properties:
          findTransactionsResult:
            type: object
            properties:
              transactions:
                type: array
                xml:
                  wrapped: true
                items:
                  type: object
                  xml:
                    name: transaction
                  properties:
                    canBiometricsBeUsed:
                      type: boolean
                    transactionID:
                      type: string
                    validationTransactionId:
                      type: string
                    transactionNonce:
                      type: string
                    transactionType:
                      type: string
                    transactionLabel:
                      type: string
                    data:
                      type: array
                      xml:
                        wrapped: true
                      items:
                        type: object
                        xml:
                          name: transactionData
                        properties:
                          code:
                            type: string
                          value:
                            type: string
                          description:
                            type: string
              is_blocked:
                type: boolean
    EnrollMethod:
      type: string
      enum:
      - SMS
      - PKC
      - IVS
      - EMAIL
      - PMAIL
      - INMOBILEAPP
      - NONE
      example: SMS
  securitySchemes:
    cookieAuth:         # arbitrary name for the security scheme; will be used in the "security" key later
      type: apiKey
      in: cookie
      name: IdSes  # cookie name